{"version":3,"sources":["components/Step1.jsx","components/Step2.jsx","components/Step3.jsx","components/Review.jsx","components/Success.jsx","components/MainForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Step1","next","e","_this$props$values","_this","props","values","meal","people","preventDefault","nextStep","alert","arr","i","push","react_default","a","createElement","key","value","_this$props$values2","this","className","id","onChange","handleChange","output1to10","style","overflow","float","type","onClick","Component","Step2","restaurant","back","prevStep","infoJSON","dishes","length","availableMeals","includes","restaurantList","Array","from","Set","arrayOfRestaurant","outputRestaurant","Step3","handleAddRow","handleRemoveRow","dish","pop","serving","sumOfServing","reduce","b","parseInt","size","name","DishesList","arrayOfDishes","rows","content","outputDishes","rowsOutput","map","row","Review","console","log","textAlign","outputDishAndServing","Success","resetEverything","MainForm","state","step","setState","input","event","Object","defineProperty","target","popLastElementInArray","slice","pushNewElementInArray","newDishState","newServingState","concat","toConsumableArray","handleChangeForDishAndServing","stateArray","_this$state","components_Step1","components_Step2","components_Step3","components_Review","components_Success","App","components_MainForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f621eb72.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Step1 extends Component {\n\n// display options from 1 to 10\n  output1to10() {\n    var arr = [];\n    for (let i = 1; i <= 10; i++) {\n        arr.push(<option key={i} value={i}>{i}</option>)\n    }\n    return arr; \n}\n\n// if all blanks are filled in, transist to next step\n  next = (e) => {\n    const {values: { meal, people }} = this.props;\n    if (meal !== \"\" && people !== \"\") {\n      e.preventDefault()\n      this.props.nextStep()\n    }\n    else {\n      alert(\"Please select an option in each criteria\")\n    }\n}\n\n    render() {\n      const {values: { meal, people }} = this.props;\n      //console.log(meal)\n      //console.log(people)\n      return (\n        <div>\n          <h3 className=\"tab\">Step 1:\n            <p>Please select a meal time</p>\n              <select value={meal} id=\"meal\" onChange={this.props.handleChange('meal')}>\n                <option></option>\n                <option value=\"breakfast\">Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n              </select>\n              <p>Please enter number of people</p>\n              <select value={people} id=\"people\" onChange={this.props.handleChange('people')}>\n                <option></option>\n                {this.output1to10()}\n              </select>\n          </h3>  \n          <div style={{overflow: 'auto'}}>\n            <div style={{float: 'right'}}>\n            <button type=\"button\" id=\"nextBtn\" onClick={this.next}>Next</button> \n            </div>\n          </div>\n        </div> \n     )\n    }\n  }\n\nexport default Step1;\n\n","import React, { Component } from 'react';\nimport infoJSON from './dishes.json';\n\n\nclass Step2 extends Component {\n\n//based on chosen meal from state object, get all restaurants then filter out dupplicates one then return a complete list/array\n  outputRestaurant(meal) {\n    let arr = [];\n    for (let i = 0; i < infoJSON.dishes.length; i++) {\n      if (infoJSON.dishes[i].availableMeals.includes(meal)) {\n        arr.push(infoJSON.dishes[i].restaurant)\n      }\n    }\n\n    let restaurantList = Array.from(new Set(arr))\n\n    let arrayOfRestaurant = []\n    for (let i = 0; i < restaurantList.length; i++) {\n      arrayOfRestaurant.push(<option key={i} value={restaurantList[i]}>{restaurantList[i]}</option>)\n    }\n    return arrayOfRestaurant; \n}\n\n//if restaurant state is not empty or ,in other word, criteria is filled in then transit to next step\n  next = (e) => {\n    const {values: { restaurant }} = this.props;\n    if (restaurant !== \"\") {\n      e.preventDefault()\n      this.props.nextStep()\n    }\n    else {\n      alert(\"Please select an option in each criteria\")\n    }\n}\n\n  back  = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n}\n\n    render() {\n      const {values: { meal, restaurant }} = this.props;\n      //console.log(restaurant)\n      return (\n    <div>\n      <h3 className=\"tab\">Step 2:\n        <p>Please select a restaurant</p>\n        <select value={restaurant} id=\"restaurant\" onChange={this.props.handleChange('restaurant')}>\n          <option value=\"\"></option>\n          {this.outputRestaurant(meal)}\n        </select>  \n      </h3> \n      <div style={{overflow: 'auto'}}>\n          <div style={{float: 'right'}}>\n            <button type=\"button\" id=\"prevBtn\" onClick={this.back}>Back</button>  \n            <button type=\"button\" id=\"nextBtn\" onClick={this.next}>Next</button> \n          </div>\n      </div>\n    </div>\n      )\n    }\n  }\n\nexport default Step2;","import React, { Component } from 'react';\nimport infoJSON from './dishes.json';\n\n\nclass Step3 extends Component {\n\n//push dish[0] into dish state and 1 into serving state in parent component so React will listen and render new row with appropriate values\n  handleAddRow = () => {\n  this.props.push()\n};\n\n//if there is more row than one, pop last element from dish state and serving state array so React will delete one row\n  handleRemoveRow = () => {\n    const {values: { dish }} = this.props;\n    if (dish.length !== 1) {\n      this.props.pop()\n    }\n  };\n\n//based on chosen meal and restaurant from state object, get all dishes then filter out dupplicates one then return a complete list/array\n  outputDishes(meal, restaurant) {\n    let arr = [];\n    for (let i = 0; i < infoJSON.dishes.length; i++) {\n      if (infoJSON.dishes[i].availableMeals.includes(meal) && infoJSON.dishes[i].restaurant.includes(restaurant)) {\n        arr.push(infoJSON.dishes[i].name)\n      }\n    }\n\n    let DishesList = Array.from(new Set(arr))\n\n    let arrayOfDishes = []\n    for (let i = 0; i < DishesList.length; i++) {\n      arrayOfDishes.push(<option key={i} value={DishesList[i]}>{DishesList[i]}</option>)\n    }\n    return arrayOfDishes; \n}\n\n  output1to10() {\n    let arr = [];\n    for (let i = 1; i <= 10; i++) {\n        arr.push(<option key={i} value={i}>{i}</option>)\n    }\n    return arr; \n}\n\n  next = (e) => {\n    const {values: { dish, serving, people }} = this.props;\n    let sumOfServing = serving.reduce((a, b) => parseInt(a) + parseInt(b), 0);\n    if (sumOfServing > 10) {\n      alert(\"Total serving must be less than or equal to 10\")\n    }\n    else if (sumOfServing < people) {\n      alert(\"Total serving must be greater than or equal to the number of people selected in 1st step\")\n    }\n    else if (new Set(dish).size !== dish.length) {\n      alert(\"Please don't select the same dish twice\")\n    }\n    //if user already fill in info for 1st row, transist to next step \n    else if (dish.length !== 0 && serving.length !== 0 && dish.length === serving.length && !dish.includes(\"\") && !serving.includes(\"\")) {\n      e.preventDefault()\n      this.props.nextStep()\n    }\n    else {\n      alert(\"Please select an option in each criteria\")\n    }\n}\n\n  back  = (e) => {\n  e.preventDefault();\n  this.props.prevStep();\n}\n\n  render() {\n      const {values: { meal, restaurant, dish, serving, people }} = this.props;\n      //show total serving\n      let sumOfServing = serving.reduce((a, b) => parseInt(a) + parseInt(b), 0); \n      let rows = []       \n      for (let i = 1; i < dish.length; i++) {\n        rows.push({content: \n          <tr>\n            <td>\n              <select key={i} id={i} value={dish[i]} className=\"dish\" onChange={this.props.handleChange('dish')}>\n                <option value=\"\"></option>\n                {this.outputDishes(meal, restaurant)}\n                </select></td>\n            <td>\n              <select key={i} id={i} value={serving[i]} className=\"serving\" onChange={this.props.handleChange('serving')}>\n                <option value=\"\"></option>\n                {this.output1to10()}\n              </select>\n            </td>\n        </tr>\n      })\n    }\n    //out put all rows starting from 2nd value of dish and serving array\n      let rowsOutput = rows.map(row => row.content) \n    \n      return (\n      <div>\n        <h3 className=\"tab\">Step 3:\n        <br />\n        <br />\n        <table id=\"step3Table\">\n          <tbody>\n            <tr>\n              <th>Please select a dish</th>\n              <th>Please select number of servings</th> \n            </tr>\n            <tr>\n              <td>\n                <select key={0} id={0} value={dish[0]} className=\"dish\" onChange={this.props.handleChange('dish')}>\n                  <option value=\"\"></option>\n                  {this.outputDishes(meal, restaurant)}\n                </select>\n              </td>\n              <td>\n                <select key={0} id={0} value={serving[0]} className=\"serving\" onChange={this.props.handleChange('serving')}>\n                  <option value=\"\"></option>\n                  {this.output1to10()}\n                </select>\n              </td>\n            </tr>\n            {rowsOutput}\n          </tbody>\n        </table>\n        <p>Total Serving: {sumOfServing}</p>\n        <p>Number of People: {people}</p>\n        <br />\n        <div style={{overflow: 'auto'}}>\n          <div style={{float: 'left'}}>\n            <button type=\"button\" id=\"deleteBtn\" onClick={this.handleRemoveRow}>Delete</button>\n            <button type=\"button\" onClick={this.handleAddRow}>Add</button>\n          </div>\n        </div>\n      </h3>   \n      <div style={{overflow: 'auto'}}>\n          <div style={{float: 'right'}}>\n            <button type=\"button\" id=\"prevBtn\" onClick={this.back}>Back</button>  \n            <button type=\"button\" id=\"nextBtn\" onClick={this.next}>Next</button> \n          </div>\n      </div>\n    </div>  \n      )\n    }\n  }\n\nexport default Step3;","import React, { Component } from 'react';\n\n\nclass Review extends Component {\n//display dish and serving together\n  outputDishAndServing(dish, serving) {\n    let arr = [];\n    for (let i = 0; i < dish.length; i++) {\n        arr.push(<li key={i} value={i}>{dish[i]} - {serving[i]}</li>)\n      }\n    return arr; \n}\n\n  next = (e) => {\n    console.log(this.props.values)\n    e.preventDefault()\n    this.props.nextStep()\n}\n\n  back  = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n}\n\n    render() {\n      const {values: { meal, people, restaurant, dish, serving }} = this.props;\n\n      return (\n        <div>\n        <h3 className=\"tab\">Review:\n        <br />\n        <br />\n        <table id=\"reviewTable\">\n          <tbody><tr>\n              <th>Meal</th>\n              <th>Number of People</th> \n              <th>Restaurant</th>\n              <th>Dishes</th> \n            </tr>\n            <tr><td>\n                <p id=\"mealOutput\">{meal}</p>\n              </td>\n              <td>\n                <p id=\"peopleOutput\" style={{textAlign: 'center'}}>{people}</p>\n              </td>\n              <td>\n                <p id=\"restaurantOutput\">{restaurant}</p>\n              </td>\n              <td>\n                <ul id=\"dishOutput\">\n                  {this.outputDishAndServing(dish, serving)}\n                </ul>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p id=\"mealOutput\" />\n        <p id=\"peopleOutput\" />\n        <p id=\"restaurantOutput\" />\n        <p id=\"dishOutput\" />\n        <p id=\"output\" />\n      </h3>\n        <div style={{overflow: 'auto'}}>\n          <div style={{float: 'right'}}>\n            <button type=\"button\" id=\"prevBtn\" onClick={this.back}>Back</button> \n            <button type=\"button\" id=\"nextBtn\" onClick={this.next}>Submit</button> \n          </div>\n        </div>\n      </div> \n     )\n    }\n  }\n\nexport default Review;","import React, { Component } from 'react';\n\n\nclass Success extends Component {\n\n//if click Order, reset everything\n  next = (e) => {\n      e.preventDefault()\n      this.props.resetEverything()\n}\n\n    render() {\n      return (\n        <div id =\"thankyou\">\n            <h1>Thank you for using our service</h1>\n            <h1>Would you like to order again?</h1>\n            <button type=\"button\" id=\"order\" onClick={this.next}>Order</button> \n            <h1>Note: the objects of data is logged in the console</h1>\n        </div>\n      )\n    }\n  }\n\nexport default Success;","import React, { Component } from 'react';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Review from './Review';\nimport Success from './Success';\n\n\nclass MainForm extends Component {\n  state = {\n    step: 1,\n    meal: '',\n    people: '',\n    restaurant: '',\n    dish: [],\n    serving: [],\n  }\n\n  nextStep = () => {\n    const { step } = this.state\n    this.setState({\n        step : step + 1\n    })\n  }\n\n  prevStep = () => {\n    const { step } = this.state\n    this.setState({\n        step : step - 1\n    })\n  }\n\n  resetEverything = () => {\n    this.setState({\n      step: 1,\n      meal: '',\n      people: '',\n      restaurant: '',\n      dish: [],\n      serving: [],\n    })\n  }\n\n  handleChange = input => event => {\n    this.setState({ [input] : event.target.value })\n    this.setState({dish: []})\n    this.setState({serving: []})\n  }\n\n  popLastElementInArray = () => {\n    this.setState({dish: this.state.dish.slice(0, -1)})\n    this.setState({serving: this.state.serving.slice(0, -1)})\n  }\n\n  pushNewElementInArray = () => {\n    let newDishState = this.state.dish\n    let newServingState = this.state.serving\n\n    this.setState({dish: [...newDishState, this.state.dish[0]]})\n    this.setState({serving: [...newServingState, 1]})\n  }\n\n  //change value in array according to id in HTML select. Activate when users make changes in row to make sure correct row value go to correct element in array\n  handleChangeForDishAndServing = input => event => {\n    if (input === \"dish\") {\n      let stateArray = this.state.dish\n      stateArray[event.target.id] = event.target.value\n      this.setState({dish: stateArray})\n    }\n    else if (input === \"serving\") {\n      let stateArray = this.state.serving\n      stateArray[event.target.id] = event.target.value\n      this.setState({serving: stateArray})\n    }\n  }\n\n  render() {\n        const {step} = this.state;\n        const { meal, people, restaurant, dish, serving } = this.state;\n        const values = { meal, people, restaurant, dish, serving };\n        switch(step) {\n        case 1:\n            return <Step1 \n            nextStep={this.nextStep} \n            prevStep={this.prevStep} \n            handleChange = {this.handleChange}\n            values={values}\n            />\n\n        case 2:\n            return <Step2             \n            nextStep={this.nextStep} \n            prevStep={this.prevStep} \n            handleChange = {this.handleChange}\n            values={values}\n            />\n\n        case 3:\n            return <Step3             \n            nextStep={this.nextStep}\n            prevStep={this.prevStep}  \n            handleChange = {this.handleChangeForDishAndServing}\n            pop = {this.popLastElementInArray}\n            push = {this.pushNewElementInArray}\n            values={values}\n            />\n\n        case 4:\n            return <Review \n            nextStep={this.nextStep}\n            prevStep={this.prevStep} \n            values={values}\n            />\n\n        case 5:\n            return <Success \n            resetEverything = {this.resetEverything}\n            />\n      }\n    }\n  }\n\nexport default MainForm;","// app.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport MainForm from './components/MainForm';\n\nclass App extends Component {\n\n  render() {\n    return(\n        <form id=\"regForm\">\n        <MainForm />\n        </form>   \n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}